name: CI

on:
  push:
    branches:
      - main

jobs:
  run_main:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Cache ID
        shell: bash
        run: |
          RAW_ID="${{ matrix.os }}-${{ matrix.python-version }}-venv-${{ hashFiles('pyproject.toml') }}"
          PROCESSED_ID=$(echo $RAW_ID | tr -d '[],')
          echo "CACHE_ID=$PROCESSED_ID" >> $GITHUB_ENV
      - name: Cache venv
        uses: actions/cache@v4
        id: cache-venv
        with:
          path: .venv
          key: ${{ env.CACHE_ID }}
      - name: Setup venv
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m venv .venv
          . ./.venv/bin/activate
          pip install .
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - name: Activate venv
        shell: bash
        run: |
          source .venv/bin/activate
          echo "VIRTUAL_ENV=${VIRTUAL_ENV}" >> $GITHUB_ENV
          echo "${VIRTUAL_ENV}/bin" >> $GITHUB_PATH
      - name: List dependencies
        shell: bash
        run: |
          python -m pip list
      - name: Run file
        run: |
          which python
          python main.py

  run_main_twice:
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: ["ubuntu-latest", "macos-latest"]
        python-version: ["3.9", "3.10", "3.11"]

    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Cache ID
        shell: bash
        run: |
          RAW_ID="${{ matrix.os }}-${{ matrix.python-version }}-venv-${{ hashFiles('pyproject.toml') }}"
          PROCESSED_ID=$(echo $RAW_ID | tr -d '[],')
          echo "CACHE_ID=$PROCESSED_ID" >> $GITHUB_ENV
      - name: Cache venv
        uses: actions/cache@v4
        id: cache-venv
        with:
          path: .venv
          key: ${{ env.CACHE_ID }}
      - name: Setup venv
        shell: bash
        run: |
          python -m pip install --upgrade pip
          python -m venv .venv
          . ./.venv/bin/activate
          pip install .
        if: steps.cache-venv.outputs.cache-hit != 'true'
      - name: Activate venv
        shell: bash
        run: |
          source .venv/bin/activate
          echo "VIRTUAL_ENV=${VIRTUAL_ENV}" >> $GITHUB_ENV
          echo "${VIRTUAL_ENV}/bin" >> $GITHUB_PATH
      - name: List dependencies
        shell: bash
        run: |
          python -m pip list
      - name: Run file
        run: |
          python main.py
      - name: Run file second time
        run: |
          python main.py